name: "Run Command and Save Report"

description: "Checkout Code, Setup Python, Install Dependencies and run Command"

inputs:
  dependencies-directory:
    description: Where to search for requirements files.
    required: false
    default: "."
    type: string

  application-dependencies:
    description: Whether to install application dependencies.
    required: false
    default: false
    type: boolean

  quality-dependencies:
    description: Whether to install quality assurance dependencies.
    required: false
    default: false
    type: boolean

  security-dependencies:
    description: Whether to install security dependencies.
    required: false
    default: false
    type: boolean

  test-dependencies:
    description: Whether to install test dependencies.
    required: false
    default: false
    type: boolean

  source-directory:
    description: Where to run the command.
    required: false
    default: "."
    type: string

  command:
    description: What command to run.
    required: true
    type: string

  report:
    description: Whether to save a report.
    required: false
    default: false
    type: boolean

  report-path:
    description: Report Artifact path.
    required: false
    type: string

  report-file:
    description: Report File.
    required: false
    type: string

  ignore-errors:
    description: Whether to continue on error.
    required: false
    default: true
    type: boolean

runs:
  using: "composite"
  steps:
    - name: Load Cache & Dependencies.
      uses: cristovamsilva/python-dependencies-action@master
      with:
        dependencies-directory: ${{ inputs.dependencies-directory }}
        application: ${{ inputs.application-dependencies }}
        quality: ${{ inputs.quality-dependencies }}
        security: ${{ inputs.security-dependencies }}
        test: ${{ inputs.test-dependencies }}

    - name: Run Command.
      continue-on-error: input.ignore-errors
      run: ${{ inputs.command }}
      shell: bash
      working-directory: ${{ inputs.source-directory }}

    - name: Upload Results.
      if: inputs.report
      uses: actions/upload-artifact@v3
      with:
        name: ${{ inputs.report-path }}
        path: ${{ inputs.source-directory }}/${{ inputs.report-file }}
